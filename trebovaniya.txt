Требования для сдачи финального проекта:

1. Допускается использовать Spring Boot
2. В проекте должнен присутствовать ORM, т.е. связь с базой данных посредством сущностей
3. Должны быть в наличии хотя бы одна из каждой аннотаций: @ManyToOne, @ManyToMany, @OneToOne(опционально)
4. Транзакционность. Все методы, предназначенные для обновления\удаления чего-то из БД, должны быть транзакционными
5. Наличие логов. Что-то поменяю в коде, должны будете по логам найти что поменялось и поправить (если логи
плохие, то это выстрел себе в ногу же)
6. Желательно наличие базовой аутентификации через Spring Security, в том числе применение ролевой модели (некоторые
методы не могут быть запущены пользователем, если у него нет такой роли)
7. Концепция MVC: должны быть репозитории для связи с БД, контроллеры (рестовые) для связи пользователя и приложения,
сервисы для связи репозитория и контроллеров
8. REST Api. Стандартные методы CRUD (только в терминологии реста, типа POST - это создание, и т.д.,
+сортировка и фильтрация хотя бы одному полю (лучше запилить универсальный метод для сортировки и фильтрации)
9. Наличие базы данных, с которым будет связываться приложение
10. CRUD методы, которые должны быть доступны в том числе из контроллера (имеется в виду, что через сервис можно из
контроллера обратиться к CRUD методам дао)
11. Хотя бы один запрос Criteria API и один HQL (но не односложный, типа select * from table)
12. Нельзя использовать SpringBootDataJpa, CRUD методы должны быть самописные с работой через EntityManager, например